/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        l_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <14 15>;
        };

        r_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <21 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp F           &kp L           &kp H         &kp V        &kp Z        &kp SINGLE_QUOTE  &kp W        &kp U         &kp O            &kp Y            &kp BSPC
&kp LCTRL  &mt LEFT_GUI S  &mt LEFT_ALT R  &mt LSHIFT N  &mt LCTRL T  &kp K        &kp C             &mt RCTRL D  &mt RSHIFT E  &mt RIGHT_ALT A  &mt RIGHT_GUI I  &kp SEMI
&kp LSHFT  &kp X           &kp J           &kp B         &kp M        &kp Q        &kp P             &kp G        &kp COMMA     &kp DOT          &kp FSLH         &kp ESC
                                           &kp LGUI      &mo 1        &kp SPACE    &kp RET           &mo 2        &kp RALT
            >;

            label = "base";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR          &kp LPAR     &kp RPAR  &kp AMPS  &kp KP_MULTIPLY  &kp CARET  &trans         &kp BSPC
&kp LALT   &trans    &trans  &trans    &kp PRCNT         &kp LBKT     &kp RBKT  &kp PLUS  &kp MINUS        &kp EQUAL  &kp PIPE       &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &kp SINGLE_QUOTE  &kp LBRC     &kp RBRC  &trans    &kp UNDER        &kp RALT   &kp BACKSLASH  &kp TILDE
                             &kp LGUI  &trans            &kp SPACE    &kp RET   &trans    &kp RALT
            >;

            label = "lower";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7    &kp N8    &kp N9     &kp N0           &kp DEL
&kp LCTRL  &kp F1  &kp F2  &kp F3    &kp F4  &kp F5       &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &kp PRINTSCREEN  &trans
&kp LSHFT  &kp F6  &kp F7  &kp F8    &kp F9  &kp F10      &kp F11   &kp F12   &trans    &trans     &trans           &trans
                           &kp LGUI  &trans  &kp SPACE    &kp RET   &trans    &kp RALT
            >;

            label = "raise";
        };

        both {
            bindings = <
&trans  &kp T         &trans        &trans        &trans        &trans          &trans          &trans            &trans      &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &trans  &trans  &trans
&trans  &trans        &trans        &bt BT_CLR    &sys_reset    &bootloader     &bootloader     &sys_reset        &trans      &trans  &trans  &trans
                                    &trans        &trans        &trans          &trans          &trans            &trans
            >;

            label = "both";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
